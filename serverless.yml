service: remote

provider:
  name: aws
  region: us-west-1
  runtime: nodejs8.10

plugins:
  - serverless-webpack

custom:
  webpack:
    includeModules: true

functions:
  graphql:
    handler: handler.apolloServer
    role: ApolloServerRole
    events:
      - http:
          cors: true
          method: post
          path: graphql

resources:
  ApolloServerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ApolloServer
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: ApolloServer
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Query'
                Resource:
                  - 'arn:aws:dynamodb:us-west-1:*:table/Movies'
                  - 'arn:aws:dynamodb:us-west-1:*:table/Movies/*'

  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: Movies
        KeySchema:
          - AttributeName: ReleaseYear
            KeyType: HASH
          - AttributeName: CreatedAt
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: CreatedAt
            AttributeType: N
          - AttributeName: ReleaseYear
            AttributeType: N
          - AttributeName: Title
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
